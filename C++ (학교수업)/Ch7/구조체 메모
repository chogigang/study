구조체를 선언할때 struct [name] 을 사용을 해야 컴파일러가 구조체로 인식을 합니다

그리고 []를 생략 가능합니다. tagName도 생략 가능합니다. 하지만 생략을 하면 구분하기 힘듭니다.

구조체는 메모리의 영역을 차지하지 않는다. 

구조체 안의 내용들은 1회성의 성격을 가지고있다.


typedef struct STag {
	int m;
	char str1[4];
	char* str2;  //메모리를 할당받진 않음

}SType;



void main() {
	SType  s1;
	s1.m = 2017;
	memcpy(s1.str1, "C++", 4); //메모리 카피 배열의 초기화가 불가능하기 때문에 memcpy를 사용해서 초기화를 시킴
	//s1.str2 = "World"; //별도의 형태로 메모리에 임시로 할당한다. 하지만 "World"는 주소가 아니기때문에 오류가난다.
	s1.str2 = (char*)"World"; //형변환을 시키면 오류가 해결된다.

	SType s2;
	s2 = s1;
	cout << s2.m << "" << s2.str1 << s2.str2 << endl;

}




// 직접 맴버 (.)연산자
//직접 맴버 (.)연산자는 구조체의 맴버를 접근하기 위하여 제공되는 연산자이다. 구조체 객체(인스턴스)에 적용하여 원하는 맴버를 나타낼 수 있다.
// 피연산자는 두 개인데 구조체 객체명과 멤버명이다.

