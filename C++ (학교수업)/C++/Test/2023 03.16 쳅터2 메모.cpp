/*
C++ 의 타입 종류

수:int(4byte) , short(2byte) , long, __int64(8byte) , float(4byte) , double(8byte) 

문자: char, wchar_t(유니코드 ) 등

문자열 : 문자여 전용 파생 타입

시간이나 날짜:구조체 타입

-----------------------------------

부호없는 정수
수와 비트열의 대응 규칙은 일정하므로 간단하게 4비트열을 사용한다.
4비트는 2의 4승으로 16가지 상태를 나타낼수 있으며 수를 대응할 경우 0부터~16가지 표현할수 있습니다.


부호 없는 정수를 선언 하고 싶을때는 타입 선언자 앞에 nusigned 를 붙여줘야한다.

nusigned short //부호가 없는 항상 양의 정수
unsigned int // 
nusigned _int64 //64비트 타입의 int 


부호 있는 정수
signed 는 부호 있는 정수를 사용할때 주로 쓰인다. 하지만 기본적으로 생략 가능 

signed int,
sigend short




음의 정수 표현


  _ _ _ _

부호비트가 0이면 양수  1이면 음수 
 나머지 3개의 비트는 수를 의미
 
 1의 보수 의단점 1
 문제점은 0, -0   표기상 0 = 0000   -0 = 1000  

 1의 보수는 2진수에서 예를들어   -5   0101를 ->1010  변환 합니다.

 단점 2
 ----------------
 2의 보수    2`s

 0,-0 의 문제점을 해결 해줍줍니다.

 -8~7 16개의 수를  4비트 표현으로 사용하고 있습니다.


 -5  를 1의 보수로 나타내면 1010   이를 2의 보수로 변환을 할려면 +1을 해서 1011 로 변환합니다.





 부동 소수점 의 구조






 문자타입
 
 1byte (8bit)
 
 2의 7승 128가지 
 
 _ _ _ _ _ _ _ _    처음은 무조건 0  네트워크 상으로 페러티 타입으로 사용한다.  

 char 은 아스키 코드상 처음으로 무조건 0으로 시작하고 나머지 127가지를 채워서  작성합니다.




 배열 

 Array 동일한 타입이 한 개 이상 일렬로 모인 집합 타입

 배열은 최초로 정의될 때 요소의 개수가 정해져야 한다. 즉 요소의 개수는 상수여야 한다.



 포인터

 저장한 메모리의 위치를 지정하는 가르키는 것이 포인터다 위치,어떤 함수 ,어떤 클래스인가 만들어진 위치를 가르키는것


 int a = 3;

  int* pa ( &a;) <-주소 지정자


  * <- 포인터 연산자
   pa 는 주소를 저장할수 없지만 선언자 앞에*를 지정하면 포인터로 인식하고 주소를 저장할수 있다.
   포인터는 참조형 변수

   출력값에 * 를붙이면 메모리 주소지 안에 있는 저장값을 불러온다 예를들어  위에 입력한 3이 출력

   pa = 003AFA24

   *pa = 3
   


   클래스

   하나 이상의 타입을 모아놓은 집합 타입    배열이 동일한 타입만 모아놓는 것과 차이가 있다.

   클래스를 이루는 가각의 타입이 나타내는 영역멤버 라고 부른다. 

   멤버는 이름을 갖기 때문에 이름을 통해서 구분이 가능하지만 요소는 이름이 없기 때문에 오직 순서를 나타내는 첨자에 의해 구분이 된다.

   들어올수 있는 타입 표기

   TYPE Name; //변수
   TYPE ArrName[N];  //배열
   TYPE* pName;   //포인터
	TYPE FuncName(ARGLIST)  //함수


	이름자리 

	char 이름
	int 이름
	...

	double 이름


	const 상수화

	const 가 한정된 변수에는 값을 대입할수 없스빈다.



	auto


	컴파일러가 자동으로 변수 타입을 지정 하는 방법








   

*/