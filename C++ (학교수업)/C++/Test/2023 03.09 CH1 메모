

/* 토큰
* 
* 키워드: 이미 정해진 예약어다. (키워드는 다 소문자)
* 식별자 : 어떤 대상을 유일하게 구병하기 위한 이름이다.
*				1.알파벳,숫자,밑줄(_)의 조합으로 만들어진다. 단, 첫 문자로 숫자가 올 수는 없다.
*				2.대소문자를 구분한다.즉,'XYZ'와 'xyz'는 서로 다른 식별자이다.
*				  일반적으로 63글자의 제한을 둔다.
				  대부분 8글자 안에서 해결할려고한다.
* 
* 
* 상수:수식에서 변하지 않는 수를 상수라고 한다.
* 
 문자열:큰따음표로 묶여 있는 문자의 모음을 의미한다.
 연산자:피연산자에 실행할 연산을 지정하는 기호이다.

 문장 부호 : 세미콜론(; 명령어 끝에 붙는다) ,소괄호( () ), 중괄호({}) 등.

*/


/*  식과 문   식
* 
	하나의 값으로 도출되는 토큰의 조합.
* 
* [3.14]는 식이다. 일반 상수는 값이므로 식이 된다.
* [1+2]는 식이다. [1+2]는 세 개의 토큰 (1,+,2)으로 이루어져 있다. 결국[1+2]는 3이라는 값으로 도출되기 때문에 식이 된다.
* [x]는 식이다.x라는 변수의 값이 도출된다.
* [x = 3 ] 은 식이다. 보톧'대입식'이라고 부르는데 좌변에 우변이 대입되면서 우변의 값이 대입식의 도출 값이 된다. [x = 3]은 3이 도출되므로 식이다.
* [Add(1,2)]는 식이다 보통 반환을 하는 함수 호출은 반환 값이 도출되는 거시므로 식이라고 할 수 있다. 반면 반환을 하지 않는 함수 호출은 식이 되지 않는다.
*/




/*
     식과 문     문
   컴퓨터에게 어떤 동작이 수행되어야 함을 나타내는 토큰의 조합

   1.[x= 3;] 은 할당문이다.x라는 변수에 3을 대입하라는 명령이다.
   2.[Add(1,2);]는 호출문이다. 함수 Add에 인자 1,2를 전달하며 호출하라는 명령이다.
   3.if문 ,for문 ,while 문 ,switch 문은 제어문이다. 조건을 따져서 분기하거나 반복을 명령한다.
   
   4.[{int a; a= 3;}]은 복합문이다. 복합문은 여러 문을 중괄호{}로 묶어 블록으로 조합한 복합저인 문장을 말한다.


*/


/*   main 함수
*		프로그램의 중요 요소 중 하나가 바로 함수이다. 함수 중에서도 가장 중요한 함수를 꼽는다면 바로 main이라고 할 수 있다.
* 
*		main 함수는 예약된 함수라고 할 수 있다.

*/

/*     표준 입출력   cout,<<
*			화살표 뒤에 있는걸 밖으로 내보내라,즉 출력하라는 명령어   ensl 라인을 만날때까지 계속 출력이 이어진다.
* 
*			변수를 출력할때는 "" 를 쓰면 안된다. 만약 변수에 ",'를 붙이면 런타임 에러가 발생한다.
* 
*							(예제)
*						int year = 2017;
*				cout<< "Welcome to" <<year<<"C++" << endl;

*/

/*				전처리기 :전처리 지시문
* 
*			#include
* 
* 해더 파일에서 살펴 보았으며 대표적인 전처리 지시문 소스파일에 헤더 파일의 내용을 그대로 포함하는 기능을 수행
* 소스파일에서 사용하는 타입,클래스,변수,함수와 관련된 정보가 수룩 만일 헤더 파일을 포함하지 않을 경우 모든 소스파일 각각에 관련된
* 정보르르 기록해야한다. 그럴경우 소스 파일의 크기는 커지고 가독성과 효율성은 극도로 떨어지게 된다.		
* 
* #으로 시작하는 지시문에 의해서 전처리를 지시한다.
* #include  ,#define ,      (잘안씀) #if~else~ #endif

			#define

매크로를 정의하는 지시문   

정수값에서는 잘 안쓰고 소숫점 실수를 사용할때 쓰임        

		#define PI 3.141592    꼭 띄어쓰기 해야함

1. 매크로 상수 정의 #define identifer token-list
2. 매크로 함수 정의:#define identifier(parameter-list)token-list
				
* 
* 
* 

*/

=======

/* 토큰
* 
* 키워드: 이미 정해진 예약어다. (키워드는 다 소문자)
* 식별자 : 어떤 대상을 유일하게 구병하기 위한 이름이다.
*				1.알파벳,숫자,밑줄(_)의 조합으로 만들어진다. 단, 첫 문자로 숫자가 올 수는 없다.
*				2.대소문자를 구분한다.즉,'XYZ'와 'xyz'는 서로 다른 식별자이다.
*				  일반적으로 63글자의 제한을 둔다.
				  대부분 8글자 안에서 해결할려고한다.
* 
* 
* 상수:수식에서 변하지 않는 수를 상수라고 한다.
* 
 문자열:큰따음표로 묶여 있는 문자의 모음을 의미한다.
 연산자:피연산자에 실행할 연산을 지정하는 기호이다.

 문장 부호 : 세미콜론(; 명령어 끝에 붙는다) ,소괄호( () ), 중괄호({}) 등.

*/


/*  식과 문   식
* 
	하나의 값으로 도출되는 토큰의 조합.
* 
* [3.14]는 식이다. 일반 상수는 값이므로 식이 된다.
* [1+2]는 식이다. [1+2]는 세 개의 토큰 (1,+,2)으로 이루어져 있다. 결국[1+2]는 3이라는 값으로 도출되기 때문에 식이 된다.
* [x]는 식이다.x라는 변수의 값이 도출된다.
* [x = 3 ] 은 식이다. 보톧'대입식'이라고 부르는데 좌변에 우변이 대입되면서 우변의 값이 대입식의 도출 값이 된다. [x = 3]은 3이 도출되므로 식이다.
* [Add(1,2)]는 식이다 보통 반환을 하는 함수 호출은 반환 값이 도출되는 거시므로 식이라고 할 수 있다. 반면 반환을 하지 않는 함수 호출은 식이 되지 않는다.
*/




/*
     식과 문     문
   컴퓨터에게 어떤 동작이 수행되어야 함을 나타내는 토큰의 조합

   1.[x= 3;] 은 할당문이다.x라는 변수에 3을 대입하라는 명령이다.
   2.[Add(1,2);]는 호출문이다. 함수 Add에 인자 1,2를 전달하며 호출하라는 명령이다.
   3.if문 ,for문 ,while 문 ,switch 문은 제어문이다. 조건을 따져서 분기하거나 반복을 명령한다.
   
   4.[{int a; a= 3;}]은 복합문이다. 복합문은 여러 문을 중괄호{}로 묶어 블록으로 조합한 복합저인 문장을 말한다.


*/


/*   main 함수
*		프로그램의 중요 요소 중 하나가 바로 함수이다. 함수 중에서도 가장 중요한 함수를 꼽는다면 바로 main이라고 할 수 있다.
* 
*		main 함수는 예약된 함수라고 할 수 있다.

*/

/*     표준 입출력   cout,<<
*			화살표 뒤에 있는걸 밖으로 내보내라,즉 출력하라는 명령어   ensl 라인을 만날때까지 계속 출력이 이어진다.
* 
*			변수를 출력할때는 "" 를 쓰면 안된다. 만약 변수에 ",'를 붙이면 런타임 에러가 발생한다.
* 
*							(예제)
*						int year = 2017;
*				cout<< "Welcome to" <<year<<"C++" << endl;

*/

/*				전처리기 :전처리 지시문
* 
*			#include
* 
* 해더 파일에서 살펴 보았으며 대표적인 전처리 지시문 소스파일에 헤더 파일의 내용을 그대로 포함하는 기능을 수행
* 소스파일에서 사용하는 타입,클래스,변수,함수와 관련된 정보가 수룩 만일 헤더 파일을 포함하지 않을 경우 모든 소스파일 각각에 관련된
* 정보르르 기록해야한다. 그럴경우 소스 파일의 크기는 커지고 가독성과 효율성은 극도로 떨어지게 된다.		
* 
* #으로 시작하는 지시문에 의해서 전처리를 지시한다.
* #include  ,#define ,      (잘안씀) #if~else~ #endif

			#define

매크로를 정의하는 지시문   

정수값에서는 잘 안쓰고 소숫점 실수를 사용할때 쓰임        

		#define PI 3.141592    꼭 띄어쓰기 해야함

1. 매크로 상수 정의 #define identifer token-list
2. 매크로 함수 정의:#define identifier(parameter-list)token-list
				
* 
* 
* 

*/



