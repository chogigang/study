

포인터


쉽게 설명해서 이름과 주소라고 생각하면 편하다

일명 롯데타워 라는  이름은 서울특별시 송파구 신천동 29 주소를 가지고 있다

네비게이션으로 둘중 하나만 입력해서 찾아갈수 있다 옛날 네비게이션은 롯데타워를 입력하면 나오지 않지만 주소를 입력하면 해당 지역으로

이동한다 이것이 하지만 요즘은 롯데타워만 알면 주소지를 알수 있고 해당 지역으로 갈수 있다 

이것이 포인터다



변수를 이용한 메모리 영역 접근은  출력문에 & 를 사용해서 16진수의 메모리 주소를 출력한다 해당 컴퓨터마다 다르게 출력한다

모든 메모리 주소지는 음수가 없다

그리고 모든 주소 시작점은 0이다


cout<<&a<<endl;
 
출력문에 &하나를 작성하면 주소 연산자이다.


포인터 변수 ex)

int*   <<선언자 뒤에 *기호를 붙이고 변수를 선언하면 포인터 변수를 선언할수 있다.

포인터형 변수는 
값을 저장할수 없고 주소만 저장할수 있고 16진수 주소만 들어갈수 있다는걸 기억해야한다.

int a;
int *p =&a;
*p =1;

했을때  포인터 변수 앞에 int 는 주소를 가르키고 있는 int a 의  자료형을 따라
int *p 로 따라 가는 것이다

short a; 면 똑같이 short *p 로 선언을 했을것이다.

Type* pointer;


일반 변수에서는 포인터 주소를 선언할수 없으므로 미리 포인터 변수를 선언하고  p =&a; 를 사용해야한다.









이중 포이넡 대상 타입의 포인터인 포인터이다. 즉 포인터의 포인터라고 할 수 있다.
논리적으로 따지면 삼중 포인터도 가능하다. 포인터의 포인터의 포인터인 셈이다.




